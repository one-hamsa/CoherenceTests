// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_3176946d03084ac0b399558d56c97747 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_f59593123c0140daa5d1bfb10251cf6f : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_04d67a50fa5d458faaa948e14db28879 : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_7148367372d04e2489076505a4c3266a : IntBinding
    {   
        private global::Player CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Player)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_6822197146557525417);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_6822197146557525417";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.leftArmItemID); }
            set { CastedUnityComponent.leftArmItemID = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).leftArmItemID;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).leftArmItemIDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.leftArmItemID = Value;
            }
            else
            {
                update.leftArmItemID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.leftArmItemIDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_6822197146557525417();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_87fabb8668294e7898a5c7463bd97eff : IntBinding
    {   
        private global::Player CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Player)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_6822197146557525417);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_6822197146557525417";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.rightArmItemID); }
            set { CastedUnityComponent.rightArmItemID = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).rightArmItemID;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).rightArmItemIDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rightArmItemID = Value;
            }
            else
            {
                update.rightArmItemID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rightArmItemIDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_6822197146557525417();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_856605db6ef9487d90a9da9603d45d9e : IntBinding
    {   
        private global::Player CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Player)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_6822197146557525417);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_6822197146557525417";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.leftWeaponItemID); }
            set { CastedUnityComponent.leftWeaponItemID = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).leftWeaponItemID;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).leftWeaponItemIDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.leftWeaponItemID = Value;
            }
            else
            {
                update.leftWeaponItemID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.leftWeaponItemIDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_6822197146557525417();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_b99e9c0f9d534521992c3f31bfd21986 : IntBinding
    {   
        private global::Player CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Player)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_6822197146557525417);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_6822197146557525417";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.rightWeaponItemID); }
            set { CastedUnityComponent.rightWeaponItemID = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).rightWeaponItemID;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent).rightWeaponItemIDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_6822197146557525417)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rightWeaponItemID = Value;
            }
            else
            {
                update.rightWeaponItemID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rightWeaponItemIDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_6822197146557525417();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_c2d38f33ebad4c4eb1124b5b2933466d : IntBinding
    {   
        private global::RigidbodyGroupSync CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::RigidbodyGroupSync)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_3238819829505931363);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_3238819829505931363";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.frame); }
            set { CastedUnityComponent.frame = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_3238819829505931363)coherenceComponent).frame;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_3238819829505931363)coherenceComponent).frameSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_3238819829505931363)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.frame = Value;
            }
            else
            {
                update.frame = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.frameSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_3238819829505931363();
        }    
    }
    
    [UnityEngine.Scripting.Preserve]
    public class Binding_daaa1fa3f3526944a84e601f43726765_1278385a4d864b7b8df84f0ad93fb923 : ByteArrayBinding
    {   
        private global::Coherence.Toolkit.PrefabSyncGroup CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.PrefabSyncGroup)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_daaa1fa3f3526944a84e601f43726765_16199295493625938824);
        public override string CoherenceComponentName => "_daaa1fa3f3526944a84e601f43726765_16199295493625938824";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Byte[] Value
        {
            get { return (System.Byte[])(CastedUnityComponent.ids); }
            set { CastedUnityComponent.ids = (System.Byte[])(value); }
        }

        protected override (System.Byte[] value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_daaa1fa3f3526944a84e601f43726765_16199295493625938824)coherenceComponent).ids;

            var simFrame = ((_daaa1fa3f3526944a84e601f43726765_16199295493625938824)coherenceComponent).idsSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_daaa1fa3f3526944a84e601f43726765_16199295493625938824)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.ids = Value;
            }
            else
            {
                update.ids = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.idsSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _daaa1fa3f3526944a84e601f43726765_16199295493625938824();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_daaa1fa3f3526944a84e601f43726765 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_daaa1fa3f3526944a84e601f43726765>();
        
        private global::RigidbodyGroupSync _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["3176946d03084ac0b399558d56c97747"] = new Binding_daaa1fa3f3526944a84e601f43726765_3176946d03084ac0b399558d56c97747(),
            ["f59593123c0140daa5d1bfb10251cf6f"] = new Binding_daaa1fa3f3526944a84e601f43726765_f59593123c0140daa5d1bfb10251cf6f(),
            ["04d67a50fa5d458faaa948e14db28879"] = new Binding_daaa1fa3f3526944a84e601f43726765_04d67a50fa5d458faaa948e14db28879(),
            ["7148367372d04e2489076505a4c3266a"] = new Binding_daaa1fa3f3526944a84e601f43726765_7148367372d04e2489076505a4c3266a(),
            ["87fabb8668294e7898a5c7463bd97eff"] = new Binding_daaa1fa3f3526944a84e601f43726765_87fabb8668294e7898a5c7463bd97eff(),
            ["856605db6ef9487d90a9da9603d45d9e"] = new Binding_daaa1fa3f3526944a84e601f43726765_856605db6ef9487d90a9da9603d45d9e(),
            ["b99e9c0f9d534521992c3f31bfd21986"] = new Binding_daaa1fa3f3526944a84e601f43726765_b99e9c0f9d534521992c3f31bfd21986(),
            ["c2d38f33ebad4c4eb1124b5b2933466d"] = new Binding_daaa1fa3f3526944a84e601f43726765_c2d38f33ebad4c4eb1124b5b2933466d(),
            ["1278385a4d864b7b8df84f0ad93fb923"] = new Binding_daaa1fa3f3526944a84e601f43726765_1278385a4d864b7b8df84f0ad93fb923(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_daaa1fa3f3526944a84e601f43726765()
        {
            bakedCommandBindings.Add("2351f7fda0244521b241827c0e01304f", BakeCommandBinding__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
    
        private void BakeCommandBinding__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f_CommandTarget = (global::RigidbodyGroupSync)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("RigidbodyGroupSync.SendImpulse", "(System.Int32UnityEngine.Vector3UnityEngine.Vector3System.Int32)", SendCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f, ReceiveLocalCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f, MessageTarget.All, _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f_CommandTarget, false);
        }
        
        private void SendCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(MessageTarget target, object[] args)
        {
            var command = new _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f();
            
            int i = 0;
            command.rigidbodyIndex = (System.Int32)args[i++];
            command.localPos = (UnityEngine.Vector3)args[i++];
            command.worldImpulse = (UnityEngine.Vector3)args[i++];
            command.numFrames = (System.Int32)args[i++];
        
            client.SendCommand(command, target, entityId);
        }
        
        private void ReceiveLocalCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(MessageTarget target, object[] args)
        {
            var command = new _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f();
            
            int i = 0;
            command.rigidbodyIndex = (System.Int32)args[i++];
            command.localPos = (UnityEngine.Vector3)args[i++];
            command.worldImpulse = (UnityEngine.Vector3)args[i++];
            command.numFrames = (System.Int32)args[i++];
            
            ReceiveCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(command);
        }

        private void ReceiveCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(_daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f command)
        {
            var target = _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f_CommandTarget;
            
            target.SendImpulse((System.Int32)(command.rigidbodyIndex),(UnityEngine.Vector3)(command.localPos),(UnityEngine.Vector3)(command.worldImpulse),(System.Int32)(command.numFrames));
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f castedCommand:
                    ReceiveCommand__daaa1fa3f3526944a84e601f43726765_2351f7fda0244521b241827c0e01304f(castedCommand);
                    break;
                default:
                    logger.Warning($"CoherenceSync_daaa1fa3f3526944a84e601f43726765 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                };

                return components;
            }
    
            logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_daaa1fa3f3526944a84e601f43726765>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }

}